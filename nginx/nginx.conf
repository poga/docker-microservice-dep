worker_processes 1;
error_log logs/error.log;
daemon off;

events {
    worker_connections 1024;
}

http {
    upstream append_log_proxy {
        server localhost:9065;
    }

    client_max_body_size 20M;

    # utilize nginx built-in request time calculation
    # use nginx's cached timestamp so no syscall required
    # NOTE: shows 0.0 if request_time < 1ms
    log_format trace_log '$remote_addr - $remote_user [$time_local] [$msec] '
        '"$request" $status $body_bytes_sent '
        '"$http_referer" "$http_user_agent" '
        '$uri $http_x_spacer_trace_id $http_x_spacer_span_id $http_x_spacer_parent_span_id '
        '$request_time $upstream_response_time $pipe';
    access_log logs/access.log trace_log;
    log_subrequest on;

    resolver 8.8.8.8 114.114.114.114 valid=3600s ipv6=off;

    lua_package_path "$prefix/spacer/?.lua;$prefix/resty_modules/lualib/?.lua;;";
    lua_package_cpath "$prefix/spacer/?.so;$prefix/resty_modules/lualib/?.so;;";

    server {
        lua_code_cache off;

        listen 9064;

        # just a proxy to append_log so we can generate the value trace
        location ~ ^/append_log_proxy/(.+) {
            internal;
            proxy_pass http://append_log_proxy;
            rewrite_by_lua_file trace.lua;
        }

        location ~ ^/(.+) {
          rewrite_by_lua_file trace.lua;
          content_by_lua_file run.lua;
        }
    }
}
